# @configure_input@

# Package-specific substitution variables
package = @PACKAGE_NAME@
version = @PACKAGE_VERSION@
tarname = @PACKAGE_TARNAME@
distdir = $(tarname)-$(version)

# OS stuff
build = @build@
build_cpu = @build_cpu@
build_vendor = @build_vendor@
build_os = @build_os@

# Prefix-specific substitution variables
prefix       = @prefix@
exec_prefix  = @exec_prefix@
bindir       = @bindir@
datarootdir  = @datarootdir@
datadir      = @datadir@/${tarname}

# VPATH-specific substitution variables
srcdir       = @srcdir@
VPATH        = @srcdir@

PGM = $(tarname)

all clean check install uninstall $(PGM):
	cd src && $(MAKE) $@

all:	other

other:
	@echo "*** any extra stuff needed for make all ***" >/dev/null

dist: $(distdir).tar.gz

$(distdir).tar.gz: $(distdir)
	tar chof - $(distdir) | gzip -9 -c > $@
	rm -rf $(distdir)

$(distdir): FORCE
	mkdir -p $(distdir)/src $(distdir)/src/images $(distdir)/src/icons	\
		$(distdir)/src/sounds $(distdir)/src/fonts $(distdir)/src/tapes	\
		$(distdir)/src/doc $(distdir)/linux $(distdir)/macos            \
		$(distdir)/windows 
	cp $(srcdir)/README.md $(srcdir)/AUTHORS.md $(srcdir)/VERSION $(distdir)
	cp $(srcdir)/INSTALL.md $(srcdir)/INSTALL-Windows.md $(distdir)
	cp $(srcdir)/LICENSE $(PGM).desktop.in $(distdir)
	cp $(srcdir)/configure.ac $(distdir)
	cp $(srcdir)/configure $(distdir)
	cp $(srcdir)/config.h.in $(distdir)
	cp $(srcdir)/config.sub $(srcdir)/config.guess $(distdir)
	cp $(srcdir)/install-sh $(distdir)
	cp $(srcdir)/Makefile.in $(distdir)
	cp $(srcdir)/src/Makefile.in $(distdir)/src
	cp $(srcdir)/src/*.cc $(distdir)/src
	rm -f $(distdir)/src/resources.cc   # file generated by rcc
	cp $(srcdir)/src/*.h $(distdir)/src
	cp $(srcdir)/src/*.qrc $(distdir)/src
	cp $(srcdir)/src/images/* $(distdir)/src/images
	cp $(srcdir)/src/icons/* $(distdir)/src/icons
	cp $(srcdir)/src/sounds/*.wav $(distdir)/src/sounds
	cp $(srcdir)/src/fonts/* $(distdir)/src/fonts
	cp $(srcdir)/src/tapes/* $(distdir)/src/tapes
	cp $(srcdir)/src/doc/* $(distdir)/src/doc
	cp -R $(srcdir)/src/data $(distdir)/src
	cp -R $(srcdir)/macos $(distdir)
	cp -R $(srcdir)/windows $(distdir)

distcheck: $(distdir).tar.gz
	gzip -cd $(distdir).tar.gz | tar xvf -
	cd $(distdir) && ./configure
	cd $(distdir) && $(MAKE) all
	cd $(distdir) && $(MAKE) DESTDIR=`pwd`/_inst install
	cd $(distdir) && $(MAKE) DESTDIR=`pwd`/_inst uninstall
	@remaining="`find $${PWD}/$(distdir)/_inst -type f | wc -l`"; \
	if [ "$${remaining}" -ne 0 ]; then \
	  echo "*** $${remaining} file(s) remaining in stage directory!"; \
	  exit 1; \
	fi
	cd $(distdir) && $(MAKE) clean
	rm -fr $(distdir)
	@echo "*** Package $(distdir).tar.gz is ready for distribution."

Makefile: Makefile.in config.status
	./config.status $@

config.h: config.h.in config.status
	./config.status $@

linux/qedsac.desktop: qedsac.desktop.in config.status
	./config.status --recheck

config.status: configure
	./config.status --recheck

FORCE:
	-rm -f $(distdir).tar.gz >/dev/null 2>&1
	-rm -fr $(distdir) >/dev/null 2>&1

.PHONY: FORCE all clean check dist distcheck install uninstall
